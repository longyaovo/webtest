import"./faceplate-switch-input-7346aa53.js";import{_ as e,n as t,e as s,s as o,bH as n,em as i,x as a,ar as r,ak as c,en as d,bJ as l,eo as h,ep as p,eq as y,er as u}from"./shell-7035335f.js";import{u as m}from"./community-colors-f8002b5e.js";import"./checked-input-element-b73a26c0.js";let b=class extends o{constructor(){super(...arguments),this.enabled=!1,this.country=""}handler(e){e.preventDefault(),n({country:this.country,name:i,value:this.enabled?"false":"true"}),window.location.reload()}render(){return a`<div @click="${this.handler}" @keypress="${this.handler}">\n <slot></slot>\n </div>`}};var k;e([t({type:Boolean})],b.prototype,"enabled",void 0),e([t({type:String})],b.prototype,"country",void 0),b=e([s("shreddit-modmode-setter")],b),function(e){e.System="0",e.Lightmode="1",e.Darkmode="2"}(k||(k={}));let f=class extends o{constructor(){super(...arguments),this.enabled=!1,this.country="",this.cookieDomain="",this.sync=!1}async connectedCallback(){super.connectedCallback(),this.sync&&this.syncCookieToUserPreference()}async syncCookieToUserPreference(){try{const{data:e}=await r({operation:c.IdentityUserPreferences,variables:{includeNightMode:!0}}),t=e.identity?.preferences?.isNightModeEnabled;if(null==t)return;t!==this.enabled&&(this.enabled=t,this.updateClientStyles(),this.setCookie(),this.reportMismatch())}catch{}}setCookie(){n({country:this.country,name:d,value:this.enabled?k.Darkmode:k.Lightmode,options:{...l,domain:this.cookieDomain||void 0}})}async setUserPreference(){await r({operation:c.UpdateAccountPreferences,variables:{input:{isNightModeEnabled:this.enabled}}})}updateClientStyles(){m({isDarkMode:this.enabled});const e=this.querySelector("faceplate-switch-input");e&&(e.checked=this.enabled)}reportMismatch(){const e=h(this.country)&&!p(),t={cookies_enabled:navigator.cookieEnabled&&!e?"true":"false"};y({type:u.Counter,name:"shreddit_darkmode_preference_mismatches",value:1,labels:t})}async handler(e){e.preventDefault(),this.enabled=!this.enabled,this.updateClientStyles(),this.setCookie(),await this.setUserPreference()}handleKeypress(e){"Enter"!==e.key&&"Space"!==e.key||this.handler(e)}render(){return a`<div @click="${this.handler}" @keypress="${this.handleKeypress}">\n <community-colors></community-colors>\n <slot></slot>\n </div>`}};e([t({type:Boolean,reflect:!0})],f.prototype,"enabled",void 0),e([t({type:String})],f.prototype,"country",void 0),e([t({type:String,attribute:"cookie-domain"})],f.prototype,"cookieDomain",void 0),e([t({type:Boolean})],f.prototype,"sync",void 0),f=e([s("shreddit-darkmode-setter")],f);
//# sourceMappingURL=user-drawer-client-js-9f1564c6.js.map
